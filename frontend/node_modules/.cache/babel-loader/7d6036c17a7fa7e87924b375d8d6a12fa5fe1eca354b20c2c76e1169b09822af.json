{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj Sonal\\\\Downloads\\\\Event-Management\\\\frontend\\\\src\\\\pages\\\\EventManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllEvents, createEvent } from \"../services/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventManagement = () => {\n  _s();\n  const [events, setEvents] = useState([]); // Initially, it's an empty array\n  const [newEvent, setNewEvent] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    date: \"\"\n  });\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const data = await getAllEvents();\n        if (Array.isArray(data)) {\n          setEvents(data); // Set events only if data is an array\n        } else {\n          console.error('Events data is not an array:', data); // Log an error if it's not an array\n        }\n      } catch (error) {\n        console.error('Error fetching events:', error); // Log any error while fetching data\n      }\n    };\n    fetchEvents();\n  }, []);\n  const handleCreateEvent = async e => {\n    e.preventDefault();\n    try {\n      const createdEvent = await createEvent(newEvent); // Assume createEvent returns the created event\n      setEvents([...events, createdEvent]); // Add the new event to the list\n      setNewEvent({\n        name: \"\",\n        description: \"\",\n        location: \"\",\n        date: \"\"\n      }); // Reset the form\n    } catch (error) {\n      console.error('Error creating event:', error); // Log any error while creating event\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateEvent,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Name\",\n        value: newEvent.name,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: newEvent.description,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: newEvent.location,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newEvent.date,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.length > 0 ? events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [event.name, \" - \", event.description, \" - \", event.location, \" - \", event.date]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(EventManagement, \"it8bJYsr/C7yZq0oQYd28/c/gcg=\");\n_c = EventManagement;\nexport default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useEffect","useState","getAllEvents","createEvent","jsxDEV","_jsxDEV","EventManagement","_s","events","setEvents","newEvent","setNewEvent","name","description","location","date","fetchEvents","data","Array","isArray","console","error","handleCreateEvent","e","preventDefault","createdEvent","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","map","event","id","_c","$RefreshReg$"],"sources":["C:/Users/Yuvraj Sonal/Downloads/Event-Management/frontend/src/pages/EventManagement.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAllEvents, createEvent } from \"../services/Api\";\r\n\r\nconst EventManagement = () => {\r\n  const [events, setEvents] = useState([]); // Initially, it's an empty array\r\n  const [newEvent, setNewEvent] = useState({ name: \"\", description: \"\", location: \"\", date: \"\" });\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const data = await getAllEvents();\r\n        if (Array.isArray(data)) {\r\n          setEvents(data);  // Set events only if data is an array\r\n        } else {\r\n          console.error('Events data is not an array:', data); // Log an error if it's not an array\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error); // Log any error while fetching data\r\n      }\r\n    };\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const handleCreateEvent = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const createdEvent = await createEvent(newEvent); // Assume createEvent returns the created event\r\n      setEvents([...events, createdEvent]); // Add the new event to the list\r\n      setNewEvent({ name: \"\", description: \"\", location: \"\", date: \"\" }); // Reset the form\r\n    } catch (error) {\r\n      console.error('Error creating event:', error); // Log any error while creating event\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Event Management</h2>\r\n      <form onSubmit={handleCreateEvent}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Event Name\"\r\n          value={newEvent.name}\r\n          onChange={(e) => setNewEvent({ ...newEvent, name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={newEvent.description}\r\n          onChange={(e) => setNewEvent({ ...newEvent, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Location\"\r\n          value={newEvent.location}\r\n          onChange={(e) => setNewEvent({ ...newEvent, location: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={newEvent.date}\r\n          onChange={(e) => setNewEvent({ ...newEvent, date: e.target.value })}\r\n        />\r\n        <button type=\"submit\">Create Event</button>\r\n      </form>\r\n\r\n      <h3>Event List</h3>\r\n      <ul>\r\n        {events.length > 0 ? (\r\n          events.map((event) => (\r\n            <li key={event.id}>\r\n              {event.name} - {event.description} - {event.location} - {event.date}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No events found</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}