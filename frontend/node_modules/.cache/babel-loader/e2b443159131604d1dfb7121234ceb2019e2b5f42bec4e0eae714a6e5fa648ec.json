{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj Sonal\\\\Downloads\\\\Event-Management\\\\frontend\\\\src\\\\pages\\\\TaskTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllTasks, createTask } from \"../services/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskTracker = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // Initializing tasks state\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    status: \"\"\n  }); // Initializing new task state\n\n  useEffect(() => {\n    // Fetching tasks from API\n    const fetchTasks = async () => {\n      const data = await getAllTasks();\n      if (Array.isArray(data)) {\n        setTasks(data); // Setting the tasks data in state\n      } else {\n        console.error('Tasks data is not an array:', data);\n      }\n    };\n    fetchTasks(); // Call fetch on mount\n  }, []);\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    const createdTask = await createTask(newTask); // Creating a task using the API\n    setTasks([...tasks, createdTask]); // Adding the new task to the state\n    setNewTask({\n      title: \"\",\n      description: \"\",\n      status: \"\"\n    }); // Clearing the form fields\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Description\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Status\",\n        value: newTask.status,\n        onChange: e => setNewTask({\n          ...newTask,\n          status: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" - \", task.status]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskTracker, \"Ev10A7zrmxtp29oeeSRInsB253I=\");\n_c = TaskTracker;\nexport default TaskTracker;\nvar _c;\n$RefreshReg$(_c, \"TaskTracker\");","map":{"version":3,"names":["React","useEffect","useState","getAllTasks","createTask","jsxDEV","_jsxDEV","TaskTracker","_s","tasks","setTasks","newTask","setNewTask","title","description","status","fetchTasks","data","Array","isArray","console","error","handleCreateTask","e","preventDefault","createdTask","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","map","task","id","_c","$RefreshReg$"],"sources":["C:/Users/Yuvraj Sonal/Downloads/Event-Management/frontend/src/pages/TaskTracker.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAllTasks, createTask } from \"../services/Api\";\r\n\r\nconst TaskTracker = () => {\r\n  const [tasks, setTasks] = useState([]); // Initializing tasks state\r\n  const [newTask, setNewTask] = useState({ title: \"\", description: \"\", status: \"\" }); // Initializing new task state\r\n\r\n  useEffect(() => {\r\n    // Fetching tasks from API\r\n    const fetchTasks = async () => {\r\n      const data = await getAllTasks();\r\n      if (Array.isArray(data)) {\r\n        setTasks(data); // Setting the tasks data in state\r\n      } else {\r\n        console.error('Tasks data is not an array:', data);\r\n      }\r\n    };\r\n    fetchTasks(); // Call fetch on mount\r\n  }, []);\r\n\r\n  const handleCreateTask = async (e) => {\r\n    e.preventDefault();\r\n    const createdTask = await createTask(newTask); // Creating a task using the API\r\n    setTasks([...tasks, createdTask]); // Adding the new task to the state\r\n    setNewTask({ title: \"\", description: \"\", status: \"\" }); // Clearing the form fields\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Tracker</h2>\r\n      <form onSubmit={handleCreateTask}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Title\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Description\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Status\"\r\n          value={newTask.status}\r\n          onChange={(e) => setNewTask({ ...newTask, status: e.target.value })}\r\n        />\r\n        <button type=\"submit\">Create Task</button>\r\n      </form>\r\n\r\n      <h3>Task List</h3>\r\n      {/* Conditional rendering based on tasks data */}\r\n      <ul>\r\n        {tasks.length > 0 ? (\r\n          tasks.map((task) => (\r\n            <li key={task.id}>\r\n              {task.title} - {task.description} - {task.status}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No tasks found</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}